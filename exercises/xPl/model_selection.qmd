---
title: "Modellselektion"
subtitle: "Übung"
format: html
about:
  id: selection-heading
  template: marquee
  image: images/crossroads.jpg
---


:::{#selection-heading}
Das 2PL Modell haben wir schon gefittet (und wir wissen ja, dass das richtig ist, weil wir die Daten selbst generiert haben). Wie aber verhalten sich das 1PL Modell und das 3PL Modell? 
:::

::: aside
Foto von <a href="https://unsplash.com/de/@stenqvist?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Jakob Stenqvist</a> auf <a href="https://unsplash.com/de/fotos/landschaft-der-mit-schnee-bedeckten-baume-f_RPPpNH0VA?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Unsplash</a>
:::

```{r}
#| echo: false

source(here::here("R", "plot_functions.R"))
```


# Modellevaluation

## 2PL

### Erwartet vs. beobachtet
Als Baseline schauen wir uns ein paar Fit-Eigenschaften von unserem 2PL Modell an, das wir so gefittet hatten: 


```{r}
#| message: false

library(TAM)
library(tidyverse)

sim_dat_wide <- readRDS(here::here("raw_data", "sim_2pl.rds"))

sim_dat_2PL <- tam.mml.2pl(sim_dat_wide %>% select(-sub_id), irtmodel = "2PL", verbose = FALSE)
```

Zuerst interessiert uns wie gut unsere tatsächlichen Werte mit den Modellerwarungen übereinstimmen. Nutze folgende Funktion um die Itemplots zu erstellen (kommt aus `TAM`):

```{r}
#| eval: false

plot(sim_dat_2PL,
  export = FALSE,
  observed = TRUE,
  package = "graphics"
)
```

Fällt dir etwas auf?

:::{.callout-caution collapse="true"}

## Lösung

```{r}
#| message: false
plot(sim_dat_2PL,
  type = "expected",
  export = FALSE,
  observed = TRUE,
  package = "graphics",
  ngroups = 4)
```

:::{.callout-important}
Noch ein Wort zur Warnung zur grafischen Überprüfung: je nach `ngroups` ist unser Item 11, das wir ja mit Infit simuliert haben, relativ gut passend, oder  es ist der simulierte Hügel zu sehen:

```{r}
plot(sim_dat_2PL,
  type = "expected",
  item = 11,
  export = FALSE,
  observed = TRUE,
  package = "graphics",
  ngroups = 3)
```

Versus:

```{r}
plot(sim_dat_2PL,
  type = "expected",
  item = 11,
  export = FALSE,
  observed = TRUE,
  package = "graphics",
  ngroups = 8)
```

:::

::: 

### Itemfit
Als nächstes schauen wir uns die Infit und Outfit - Werte der Items an. Wende dafür die Funktion `tam.fit()` auf dein gefittetes TAM-Modell an.  

:::{.callout-caution collapse="true"}

## Lösung

```{r}
fit_2PL <- tam.fit(sim_dat_2PL)

fit_2PL$itemfit
```

Manchmal kann es auch helfen, sich das ganze als Plot ausgeben zu lassen:

```{r}
#| code-fold: true

# Definieren einer eigenen Plot-Funkktion
plot_infit_outfit <- function(tam_obj){
fit_tam <- tam.fit(tam_obj)$itemfit

fit_plotdat <- fit_tam %>%
  # Als Faktor umwandeln, damit die Sortierung im Plot stimmt
  mutate(Item = factor(parameter, levels = unique(parameter[order(as.numeric(parameter))]))) %>%
  select(Item, Outfit, Infit) %>%
  pivot_longer(cols = c(Outfit, Infit), names_to = "fit", values_to = "value")

ggplot(fit_plotdat, aes(x = value, y = Item)) +
  geom_point(colour = "#F4BA02") +
  facet_grid(. ~ fit, scales = "fixed") +
  xlim(0.4, 1.6) +
  theme_bg() +
  geom_vline(xintercept = 0.5, linetype = "dotted", colour = "#9B1B34") +
  geom_vline(xintercept = 1.5, linetype = "dotted", colour = "#9B1B34")
}

plot_infit_outfit(sim_dat_2PL)
```

Wenig überraschend sind die Werte fast perfekt. 
:::

## 1PL

Jetzt wollen wir uns noch zwei alternative Modelle anschauen: Das 1PL Modell und das 3PL Modell. Fitte das 1PL mit `TAM` und schaue dir ebenfalls die Itemplots und die Fit-Statistiken an.

:::{.callout-caution collapse="true"}

## Lösung
```{r}
sim_dat_1PL <- tam(sim_dat_wide %>% select(-sub_id), irtmodel = "1PL", verbose = FALSE)

plot(sim_dat_1PL,
  export = FALSE,
  observed = TRUE,
  package = "graphics", 
  ngroups = 7
)

```

Und die Infit und Outfitwerte, geplottet mit meiner eigenen Funktion (weiter oben definiert):

```{r}
#| code-fold: true

plot_infit_outfit(sim_dat_1PL)

```

Hier können wir schön sehen, dass der Fit schon deutlich abnimmt, wenn wir die Steigung ignorieren (die wir ja bewusst simuliert haben).  
Unsere beiden missspezifizierten Items 3 und 11 sind hier jetzt auch auffällig. 

:::



## 3PL
Fitte jetzt ein 3PL Modell. Nutze dafür diesmal `mirt` und nutze `ggmirt`, um dir die [in den Folien gezeigten Plots](https://nickhaf.github.io/IRT_workshop/slides/xPL/#/item-person-map) anzuschauen. 

:::{.callout-caution collapse="true"}
## Lösung
```{r}
library(mirt)
sim_dat_3PL <- mirt(sim_dat_wide %>% select(-sub_id), 1, itemtype = "3PL", verbose = FALSE)
summary(sim_dat_3PL)
coef(sim_dat_3PL, IRTpars = TRUE, simplify = TRUE)

```

```{r}
# install.packages("devtools")
# devtools::install_github("masurp/ggmirt")
library(ggmirt)
itemfitPlot(sim_dat_3PL)
tracePlot(sim_dat_3PL)
summaryPlot(sim_dat_3PL)
```

- Bei Item 2 scheint ein recht hoher Rateparamter geschätzt zu werden. Das sehen wir in den ICCs. 
- Item 3 hatten wir ja so simuliert, dass Personen mit niedriger Fähigkeit richtig antworten, alle anderen aber falsch. Wäre das ein echtes Item sollten wir unbedingt noch einmal raufschauen (eventuell ist es falsch herum kodiert, oder die Lösung ist falsch?).  
:::

## Modellvergleich

### 1PL vs. 2PL
Nutze jetzt die Funktion `CMD::IRT.compareModels()` um das 1PL und das 2PL Modell zu vergleichen. Für welches Modell würdest du dich aufgrund der Fit-Kriterien entscheiden?

:::{.callout-caution collapse="true"}
## Lösung
```{r}
CDM::IRT.compareModels(sim_dat_1PL, sim_dat_2PL)
```

In diesem Fall scheint das 2PL Modell zu bevorzugen zu sein, da beispielsweise AIC und BIC niedriger sind. Der Unterschied zwischen den Modellen ist laut Likelihood Ratio Test signifikant. Insgesamt würden wir uns also für das 2PL Modell entscheiden. 
::: 

### 2PL vs. 3PL
Wir können das gleiche auch in `mirt` machen. Fitte dafür zuerst das 2PL Modell noch einmal mit `mirt`, und vergleiche es dann mit dem 3PL Modell mit Hilfe der Funktion `anova()`. 


:::{.callout-caution collapse="true"}
## Lösung
```{r}
sim_dat_2PL <- mirt(sim_dat_wide %>% select(-sub_id), 1, itemtype = "2PL", verbose = FALSE)
anova(sim_dat_2PL, sim_dat_3PL)
```

In diesem Fall scheint das 3PL Modell keinen wirklichen Vorteil zu bieten (haben wir ja auch nicht so simuliert). Wir könnten uns also ruhigen Gewissens für das 2PL Modell entscheiden.
:::
