---
title: "Missings"
subtitle: "Übung"
lang: de
author: "Nicklas Hafiz"

format: html
---


# Missings
::: {.callout-caution icon="false" collapse="true"}
## Vorheriger Code

```{r, message = FALSE}
# install.packages("tidyverse")
# install.packages("here")

library(tidyverse)
library(here)

## Load the data
characters <- readRDS(file = here::here("raw_data", "characters.rds"))
psych_stats <- read.csv(
  file = here::here("raw_data", "psych_stats.csv"),
  sep = ";"
)
```
:::

## Übung

1.  Hat der `characters` Datensatz irgendwelche `NAs`?

::: {.callout-tip collapse="true"}
## Tipp

Nutze `any()` um zu prüfen, ob ein logischer Vektor irgendwelche `TRUE` Werte enthält.
:::

::: {.callout-caution collapse="true"}
## Lösung

```{r}
any(is.na(characters))
```

Nein, es scheinen keine `NAs` in diesem Datensatz zu sein, was im echten Leben großartig wäre. Für diese Übung ist es nicht so toll, also fügen wir manuell einige `NAs` hinzu.
:::

2.  Pass auf, dass du den `characters` `data.frame` nicht überschreibst, also kopiere ihn in das neue Objekt `characters_na`, bevor du weiter machst. Setze dann den `name` auf `NA` in den Zeilen `34, 103, 300` und den `uni_name` auf `NA` in den Zeilen `404, 670`.


::: {.callout-tip collapse="true"}
## Tipp
Um Werte zu überschreiben, kannst du sie auf der **linken** Seite des Zuweisungsoperators `<-` auswählen und ihnen auf der rechten Seite einen neuen Wert zuweisen.
:::

::: {.callout-caution collapse="true"}
## Lösung

```{r}
characters_na <- characters

characters_na[c(34, 103, 300), "name"] <- NA
characters_na[c(404, 670), "uni_name"] <- NA
```
:::

3.  Entferne alle Zeilen aus dem `characters_na` `data.frame`, die fehlende Werte in der Spalte `name` enthalten. 

::: {.callout-caution collapse="true"}
## Lösung

```{r}
characters_na <- characters_na[!is.na(characters_na$name), ]
```

Oder:

::: tidy
```{r}
library(tidyverse)

characters_na <- characters_na %>%
  drop_na(name)
```
:::
:::

