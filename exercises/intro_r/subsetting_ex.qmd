---
title: "Subsetting"
subtitle: "Übung"
format: html
about:
  id: sub-heading
  template: marquee
  image: images/subset.jpg
---

:::{#sub-heading}
Hier wird das subsetten von spezifischen Zeilen geübt.
:::

:::
Foto von <a href="https://unsplash.com/de/@impatrickt?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Patrick Tomasso</a> auf <a href="https://unsplash.com/de/fotos/offenes-buch-lot-Oaqk7qqNh_c?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Unsplash</a>
:::

::: {.callout-caution icon="false" collapse="true"}
## Vorheriger Code

```{r, message = FALSE}
# install.packages("tidyverse")
# install.packages("here")

library(tidyverse)
library(here)

## Load the data
characters <- readRDS(file = here::here("raw_data", "characters.rds"))
psych_stats <- read.csv(
  file = here::here("raw_data", "psych_stats.csv"),
  sep = ";"
)
```
:::

## Übung

Korrigiere den folgenden Code, sodass nur die ersten 10 Zeilen und die letzten 3 Spalten ausgewählt werden. 

```{r correct_subsetting, eval=FALSE}
characters[4:6, 10]
```

::: {.callout-tip collapse="true"}
## Tipp
Wir müssen die Zeilen, die wir auswählen wollen, [vor]{.highlight} dem Komma `,` schreiben, die Spalten danach. 
:::

::: {.callout-caution collapse="true" icon="false"}
## Lösung

```{r}
characters[1:10, 4:6]
```
:::

## Übung

1.  Warum funktioniert der folgende Code nicht? Korrigiere ihn in deinem eigenen Skript. 
```{r, eval = FALSE}
characters[uni_name == "Friends", ]
```

::: {.callout-tip collapse="true"}
## Tipp
Du musst die Spalte aus dem `data.frame` mit `$` extrahieren, bevor du sie mit dem Character-String vergleichen kannst.
:::

::: {.callout-caution collapse="true"}
## Lösung
```{r}
characters[characters$uni_name == "Friends", ]

```
:::

2.  Welche Charactere wird dieser Code extrahieren: `characters[(characters$uni_name == "Harry Potter" | characters$uni_name != "Harry Potter") & !(characters$notability > 90), ]`?
    -   [ ] Alle Harry Potter Character mit einer notability über `90`.
    -   [ ] Alle Charactere, die nicht aus dem Harry Potter Universum stammen und eine notability unter `90` haben.
    -   [ ] Alle Charactere mit einer notability über `90`.
    -   [ ] Alle Charactere mit einer notability unter oder gleich `90`.
    
::: {.callout-caution collapse="true"}
## Lösung

-   [ ] Alle Harry Potter Character mit einer notability über `90`.
-   [ ] Alle Charactere, die nicht aus dem Harry Potter Universum stammen und eine notability unter `90` haben.
-   [ ] Alle Charactere mit einer notability über `90`.
-   [x] Alle Charactere mit einer notability unter oder gleich `90`.
    
Bisschen eine Trick-Frage: weil wir alle Charactere auswählen, die aus dem Harry Potter Universum ODER nicht von dort stammen, wählen wir alle Charactere unabhängig von ihrer TV-Serie aus. Aber wir wählen alle Charactere aus, die eine Notability unter 90 haben (Vorsicht vor dem `!` vor dem jeweiligen Vergleich).
:::

## Übung

1. Welche Charactere aus "Game of Thrones" haben eine Notability über `90`? Benutze `Base R`.

::: {.callout-tip collapse="true"}
## Tipp
Du musst einen logischen Vektor definieren, der `TRUE` Werte für alle "Game of Thrones" Charactere enthält, die eine Notability über `90` haben.
:::

::: {.callout-caution collapse="true"}
## Lösung

```{r}
characters[characters$uni_name == "Game of Thrones" & characters$notability > 90, ]
```
Nur Tyrion Lannister hat eine Notability über `90`.
:::


2.  Welche Charactere aus "How I Met Your Mother" oder "Breaking Bad" sind in den Daten enthalten? Benutze das `tidyverse`.

::: {.callout-tip collapse="true"}
## Tipp

Nutze die `filter()` Funktion.
:::

::: {.callout-caution collapse="true"}
## Lösung

```{r, message = FALSE}
library(tidyverse)
filter(characters, uni_name %in% c("How I Met Your Mother", "Breaking Bad"))
```
:::

