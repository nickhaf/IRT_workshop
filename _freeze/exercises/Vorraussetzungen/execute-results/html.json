{
  "hash": "b25f6d0d3d188a6f8ecce90aa682a3b5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"IRT Voraussetzungen\"\nauthor: \"Nicklas Hafiz\"\ndate: \"12 September, 2024\"\nformat: \n  html:\n    code-link: true\n---\n\n\n\n\n\n\n\n\n\n# Übung 1\n\nWir schauen uns eine ganz simple Version an. Wer interessiert ist, und z.B. Daten für eine Poweranalyse simulieren möchte, findet [hier]() Unterstützung.\nInstallieren und/oder lade folgende Pakete für diese Übung:\n\n\n\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nLade nötiges Paket: CDM\n\nLade nötiges Paket: mvtnorm\n\n**********************************\n** CDM 8.2-6 (2022-08-25 15:43:23)       \n** Cognitive Diagnostic Models  **\n**********************************\n\n\n* TAM 4.2-21 (2024-02-19 18:52:08)\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n## Formel\nZuerst müssen wir festlegen, was wir eigentlich simulieren wollen. Wir starten mit einem 2PL Modell. Wie sah die Formel dafür noch einmal aus?\n\n\n$$\nP(X_{is} = 1|\\theta_s,\\beta_i,\\alpha_i) = \\frac{\\exp(\\alpha_i(\\theta_s-\\beta_i))}{1 + \\exp(a_i (\\theta_s - \\beta_i))}\n$$ {#eq-2PL}\n\n1. Versuche noch einmal, alle Elemente von @eq-2PL für dich selbst zu erklären.\n\n:::{.callout-caution collapse=true}\n## Lösung\n\nWir versuchen zu schätzen wie hoch die Wahrscheinlichkeit ist, dass eine Person $s$ ein Item $i$ richtig ($X_{is} = 1$) beantwortet. Dazu nutzen wir den Diskriminationsparameter $\\alpha_i$ und den Schwierigkeitsparameter $\\beta_i$ von Item $i$ und die Personenfähigkeit $\\theta_s$ von Person $s$.\n:::\n\n\n## 2PL Funktion\n2. Jetzt beginnt der fun part: Schreibe eine [Funktion]() genannt `calc_2pl` die genau diese Formel in R Code umsetzt. \n\n:::{.callout-tip collapse=true}\nDer Aufbau der Funktion könnte so aussehen:\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\n\n\nBefülle sie nun mit der Formel. `alpha`, `theta` und `beta` sind hier also die Funktionsargumente (weil sie innerhalb der Klammern von `function()` stehen), und müssen beim späteren Aufruf der Funktion von der nutzenden Person mit Werten befüllt werden. Diese Werte können dann im Funktionskörper (zwischen `{}`) genutzt werden, um @eq-2PL in R Code zu übersetzen.\n\n:::\n\n\n:::{.callout-caution collapse=true}\n## Lösung\n\n\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\n\n\n\n`alpha`, `theta` und `beta` sind hier also die Funktionsargumente (weil sie innerhalb der Klammern von `function()` stehen), und müssen beim späteren Aufruf der Funktion von der nutzenden Person mit Werten befüllt werden. Im Funktionskörper (zwischen `{}`) werden sie genutzt, um $p$ anhand von @eq-2PL zu berechnen.\n\n\n:::\n\n\n## Simulieren von Daten\nJetzt geht's los! Wir wollen nun eigene Daten simulieren. Das tolle ist: wir können so alle Aspekte selber festlegen, und daran untersuchen, wie sich das Variieren von bestimmten Parametern auf das Ergebnis auswirkt. \n\n\n### Items\n1. Zuerst die Items. Baue einen `data.frame` mit dem Namen `items`. Er soll 13 Zeilen und 4 Spalten haben und folgendes enthalten:\n\n- `item_id`: Die ID des Items, von 1 bis 13. \n- `alpha`: Die Diskriminationsparameter, liegen zwischen 0.5 und 1.5 in 13 gleich langen Schritten.\n- `beta`: Die Schwierigkeitsparameter, liegen zwischen -3 und 3 jeweils im Abstand von 0.5. \n\n:::{.callout-tip collapse=true}\n## Tip\n\nDie Funktion `seq()` ist dein Freund. Mehr brauchst du nicht, um die Zahlenreihen zu erzeugen. Schaue dir die Dokumentation an. \n\n:::\n\n:::{.callout-caution collapse=true}\n## Lösung\n\n\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\n\n\nDas sind also die Itemparameter, die wir in unsere Simulation packen. \n:::\n\n\n2. Jetzt können wir die Personen simulieren. Unser Ziel ist also ein `data.frame`, der $\\theta$ Werte für die untersuchten Personen enthält. Wir simulieren 100000 Personen, der `data.frame` sollte also 100000 Zeilen haben. Außerdem benötigen wir zwei Spalten:\n\n- `ID`: Die ID der Person, von 1 bis 100000.\n- `theta`: Die Fähigkeit der Person, die wir simulieren. Wir nehmen an, dass die Fähigkeit normalverteilt ist, mit einem Mittelwert von 0 und einer Standardabweichung von 1.\n\n:::{.callout-tip collapse=true}\n## Tip\nWir können zufällige Daten aus einer Normalverteilung mit Hilfe der Funktion `rnorm()` ziehen. \n:::\n\n:::{.callout-caution collapse=true}\n## Lösung\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\n\n\n:::\n\nPerfekt! Jetzt können wir die Itemantworten simulieren. Dazu sind noch ein paar kleine Schritte nötig:\n\n3. Merge die beiden `data.frames` `subjects` und `items` zu einem neuen `data.frame` `sim_dat` zusammen. Und zwar so, dass wir $1000 * 13$ Zeilen bekommen, also jede Person jedes der 13 Items zugeordnet wird (bisher noch ohne Antwort der Person, nur mit den Itemkennwerten. Das erleichtert uns im nächsten Schritt, die Antworten der Personen zu simulieren). \n\n:::{.callout-tip collapse=true}\n## Tip\n\nNutze die Funktion `merge()` ohne irgendwelche weiteren Argumente. \n\n:::\n\n:::{.callout-caution collapse=true}\n## Lösung\n\n\n\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t1300000 obs. of  6 variables:\n $ sub_id : int  1 2 3 4 5 6 7 8 9 10 ...\n $ theta  : num  0.753 2.014 -0.355 2.028 -2.217 ...\n $ item_id: int  1 1 1 1 1 1 1 1 1 1 ...\n $ b      : num  -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 ...\n $ a      : num  0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 ...\n $ c      : num  0 0 0 0 0 0 0 0 0 0 ...\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\nUnser finaler `data.frame` hat 1300000 Zeilen, wie verlangt. Lasst uns auch noch einmal schauen, ob eine zufällige Person alle Items beantwortet hat:\n\n\n\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\nDas sieht gut aus! \n\n\n:::\n\n4. Jetzt simulieren wir aus diesem Vorbereiteten `data.frame` die Antworten der Personen, abhängig von ihren Fähigkeiten $\\theta$ (jede Person hat hier einen zufälligen Wert aus einer Normalverteilung mit $\\mu = 1$ und $\\sigma = 1$ bekommen) und den Itemparametern $\\alpha$ und $\\beta$ (die hatten wir einfach als Sequenz festgelegt). Lege eine neue Spalte `p` in `sim_dat` an, die für jede Person die Wahrscheinlichkeit enthält, dass sie das jeweilige Item richtig beantwortet. Dafür brauchen wir jetzt unsere Funktion `calc_2pl`, die wir am Anfang definiert haben! Diese nimmt aus jeder Zeile den `theta`, `alpha` und `beta` Wert als input, und berechnet daraus die Wahrscheinlichkeit, dass die Person das Item richtig beantwortet.\n\n:::{.callout-tip collapse=true}\n## Tip\nSupereinfach geht das ganze mit der `mutate()` Funktion aus dem `tidyverse`. \n:::\n\n:::{.callout-caution collapse=true}\n## Lösung\n\n\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n  sub_id      theta item_id  b   a c         p\n1      1  0.7533110       1 -3 0.5 0 0.8672265\n2      2  2.0143547       1 -3 0.5 0 0.9246434\n3      3 -0.3551345       1 -3 0.5 0 0.7895862\n4      4  2.0281678       1 -3 0.5 0 0.9251233\n5      5 -2.2168745       1 -3 0.5 0 0.5966588\n6      6  0.7583962       1 -3 0.5 0 0.8675190\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\nAuf den ersten Blick sieht das schonmal gut aus. Personen mit niedrigerem $\\theta$ Wert haben auch eine geringere Wahrscheinlichkeit, das Item richtig zu beantworten (vgl. z.B. Zeile 2 und 3).\n:::\n\n5. Jetzt sind wir auch schon fast am Ende. Wir müssen lediglich aus den Wahrscheinlichkeiten die tatsächlichen Antworten der Personen simulieren. Nutze die Berechneten Antwortwahrscheinlichkeiten `p`, um für jede Person und jedes Item einen Wert aus einer [Bernoulliverteilung](https://de.wikipedia.org/wiki/Bernoulli-Verteilung) zu ziehen. \n\n:::{.callout-tip collapse=true}\n## Tip\n\nEine Bernoulliverteilung ist eine Binomialverteilung mit nur einem Versuch. Wir können daher die Funktion `rbinom()` nutzen, und das `size`-Argument auf 1 setzen.\n\n:::\n\n:::{.callout-caution collapse=true}\n## Lösung\n\n\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n  sub_id      theta item_id  b   a c         p answer\n1      1  0.7533110       1 -3 0.5 0 0.8672265      1\n2      2  2.0143547       1 -3 0.5 0 0.9246434      1\n3      3 -0.3551345       1 -3 0.5 0 0.7895862      0\n4      4  2.0281678       1 -3 0.5 0 0.9251233      1\n5      5 -2.2168745       1 -3 0.5 0 0.5966588      1\n6      6  0.7583962       1 -3 0.5 0 0.8675190      1\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\nAuch das sieht erst einmal plausibel aus! Toll!\n\n:::\n\n### Check mit `TAM`\n\nJetzt wollen wir natürlich noch schauen, ob das Ganze so funktioniert hat, wie wir uns das vorgestellt haben. Wir wollen das `TAM` Paket, um ein 2PL Modell auf die Itemantworten zu fitten. Wenn alles geklappt hat, sollten wir in etwa unsere Itemparameter wiedererkennen. \n\n1. Zuerst müssen wir unsere Daten dafür noch ein bisschen aufbereiten, sprich ins Wide-Format bringen. Probiere das also mal aus!\n\n\n:::{.callout-tip collapse=true}\n## Tip\nIch nutze dafür immer deutlich lieber die `tidyverse` Funktion `pivot_wider()` als die base-R Funtkion `reshape()`. \n:::\n\n:::{.callout-caution collapse=true}\n\n\n\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 14\n  sub_id   `1`   `2`   `3`   `4`   `5`   `6`   `7`   `8`   `9`  `10`  `11`  `12`\n   <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int>\n1      1     1     1     1     1     1     0     1     0     1     1     0     0\n2      2     1     1     1     1     1     1     1     1     1     1     1     0\n3      3     0     1     1     1     0     0     0     0     0     1     0     0\n4      4     1     1     1     1     1     1     1     1     0     0     0     0\n5      5     1     1     0     1     0     0     0     0     0     0     0     0\n6      6     1     1     0     1     1     1     0     0     0     0     0     0\n# ℹ 1 more variable: `13` <int>\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\nDie Spaltennamen sind jetzt unsere Item-Nummern. Pro Zeile finden sich die Antworten der Personen, entweder hat sie das entsprechende Item richtig (`1`) oder falsch (`0`) beantwortet. \n\n:::\n\n2. Jetzt können wir das Modell fitten. Nutze dafür wie angekündigt das `TAM` Paket, und entferne noch die Spalte `sub_id`, wir geben nur die Itemantworten in die Funktion. Speichere den Funktionsoutput in dem Object `sim_dat_2PL`.\n\n:::{.callout-tip collapse=true}\nWir brauchen die Funktion `tam.mml.2pl()`. \n:::\n\n:::{.callout-caution collapse=true}\n\n\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n....................................................\nProcessing Data      2024-09-12 14:04:16.199018 \n    * Response Data: 100000 Persons and  13 Items \n    * Numerical integration with 21 nodes\n    * Created Design Matrices   ( 2024-09-12 14:04:16.339101 )\n    * Calculated Sufficient Statistics   ( 2024-09-12 14:04:16.549025 )\n....................................................\nIteration 1     2024-09-12 14:04:16.58792\nE Step\nM Step Intercepts   |----\nM Step Slopes       |---\n  Deviance = 1267150.8426\n  Maximum item intercept parameter change: 0.419556\n  Maximum item slope parameter change: 0.209449\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 2     2024-09-12 14:04:16.83757\nE Step\nM Step Intercepts   |---\nM Step Slopes       |---\n  Deviance = 1256572.3453 | Absolute change: 10578.5 | Relative change: 0.00841853\n  Maximum item intercept parameter change: 0.142116\n  Maximum item slope parameter change: 0.13129\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 3     2024-09-12 14:04:17.039367\nE Step\nM Step Intercepts   |---\nM Step Slopes       |---\n  Deviance = 1255075.8194 | Absolute change: 1496.526 | Relative change: 0.00119238\n  Maximum item intercept parameter change: 0.085173\n  Maximum item slope parameter change: 0.070548\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 4     2024-09-12 14:04:17.158922\nE Step\nM Step Intercepts   |---\nM Step Slopes       |---\n  Deviance = 1254560.5132 | Absolute change: 515.3062 | Relative change: 0.00041075\n  Maximum item intercept parameter change: 0.064561\n  Maximum item slope parameter change: 0.041601\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 5     2024-09-12 14:04:17.362454\nE Step\nM Step Intercepts   |---\nM Step Slopes       |---\n  Deviance = 1254359.2843 | Absolute change: 201.2289 | Relative change: 0.00016042\n  Maximum item intercept parameter change: 0.050987\n  Maximum item slope parameter change: 0.030886\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 6     2024-09-12 14:04:17.58585\nE Step\nM Step Intercepts   |---\nM Step Slopes       |---\n  Deviance = 1254269.9949 | Absolute change: 89.2894 | Relative change: 7.119e-05\n  Maximum item intercept parameter change: 0.04019\n  Maximum item slope parameter change: 0.023359\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 7     2024-09-12 14:04:17.697785\nE Step\nM Step Intercepts   |---\nM Step Slopes       |---\n  Deviance = 1254226.1047 | Absolute change: 43.8902 | Relative change: 3.499e-05\n  Maximum item intercept parameter change: 0.031482\n  Maximum item slope parameter change: 0.017898\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 8     2024-09-12 14:04:17.815682\nE Step\nM Step Intercepts   |---\nM Step Slopes       |--\n  Deviance = 1254203.2462 | Absolute change: 22.8585 | Relative change: 1.823e-05\n  Maximum item intercept parameter change: 0.02456\n  Maximum item slope parameter change: 0.013847\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 9     2024-09-12 14:04:17.942482\nE Step\nM Step Intercepts   |---\nM Step Slopes       |--\n  Deviance = 1254191.0072 | Absolute change: 12.239 | Relative change: 9.76e-06\n  Maximum item intercept parameter change: 0.019126\n  Maximum item slope parameter change: 0.01079\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 10     2024-09-12 14:04:18.051219\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254184.3636 | Absolute change: 6.6436 | Relative change: 5.3e-06\n  Maximum item intercept parameter change: 0.014893\n  Maximum item slope parameter change: 0.008455\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 11     2024-09-12 14:04:18.161182\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254180.7248 | Absolute change: 3.6388 | Relative change: 2.9e-06\n  Maximum item intercept parameter change: 0.011608\n  Maximum item slope parameter change: 0.006653\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 12     2024-09-12 14:04:18.346076\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254178.7154 | Absolute change: 2.0093 | Relative change: 1.6e-06\n  Maximum item intercept parameter change: 0.009062\n  Maximum item slope parameter change: 0.005253\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 13     2024-09-12 14:04:18.441578\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254177.5963 | Absolute change: 1.1192 | Relative change: 8.9e-07\n  Maximum item intercept parameter change: 0.007088\n  Maximum item slope parameter change: 0.004157\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 14     2024-09-12 14:04:18.552374\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254176.967 | Absolute change: 0.6293 | Relative change: 5e-07\n  Maximum item intercept parameter change: 0.005555\n  Maximum item slope parameter change: 0.003297\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 15     2024-09-12 14:04:18.682903\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254176.6097 | Absolute change: 0.3573 | Relative change: 2.8e-07\n  Maximum item intercept parameter change: 0.004363\n  Maximum item slope parameter change: 0.002619\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 16     2024-09-12 14:04:18.790388\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254176.4047 | Absolute change: 0.205 | Relative change: 1.6e-07\n  Maximum item intercept parameter change: 0.003433\n  Maximum item slope parameter change: 0.002083\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 17     2024-09-12 14:04:18.906541\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254176.286 | Absolute change: 0.1188 | Relative change: 9e-08\n  Maximum item intercept parameter change: 0.002706\n  Maximum item slope parameter change: 0.001658\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 18     2024-09-12 14:04:19.019257\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254176.2165 | Absolute change: 0.0695 | Relative change: 6e-08\n  Maximum item intercept parameter change: 0.002137\n  Maximum item slope parameter change: 0.001321\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 19     2024-09-12 14:04:19.1358\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254176.1755 | Absolute change: 0.041 | Relative change: 3e-08\n  Maximum item intercept parameter change: 0.00169\n  Maximum item slope parameter change: 0.001053\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 20     2024-09-12 14:04:19.319203\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254176.1511 | Absolute change: 0.0244 | Relative change: 2e-08\n  Maximum item intercept parameter change: 0.001338\n  Maximum item slope parameter change: 0.00084\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 21     2024-09-12 14:04:19.419472\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254176.1364 | Absolute change: 0.0146 | Relative change: 1e-08\n  Maximum item intercept parameter change: 0.001061\n  Maximum item slope parameter change: 0.00067\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 22     2024-09-12 14:04:19.541147\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254176.1276 | Absolute change: 0.0088 | Relative change: 1e-08\n  Maximum item intercept parameter change: 0.000842\n  Maximum item slope parameter change: 0.000535\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 23     2024-09-12 14:04:19.666418\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254176.1222 | Absolute change: 0.0054 | Relative change: 0\n  Maximum item intercept parameter change: 0.000669\n  Maximum item slope parameter change: 0.000427\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 24     2024-09-12 14:04:19.761676\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254176.1189 | Absolute change: 0.0033 | Relative change: 0\n  Maximum item intercept parameter change: 0.000532\n  Maximum item slope parameter change: 0.000341\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 25     2024-09-12 14:04:19.886624\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254176.1169 | Absolute change: 0.002 | Relative change: 0\n  Maximum item intercept parameter change: 0.000423\n  Maximum item slope parameter change: 0.000272\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 26     2024-09-12 14:04:20.031724\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254176.1156 | Absolute change: 0.0012 | Relative change: 0\n  Maximum item intercept parameter change: 0.000337\n  Maximum item slope parameter change: 0.000218\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 27     2024-09-12 14:04:20.153977\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254176.1149 | Absolute change: 8e-04 | Relative change: 0\n  Maximum item intercept parameter change: 0.000268\n  Maximum item slope parameter change: 0.000174\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 28     2024-09-12 14:04:20.342246\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254176.1144 | Absolute change: 5e-04 | Relative change: 0\n  Maximum item intercept parameter change: 0.000214\n  Maximum item slope parameter change: 0.000139\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 29     2024-09-12 14:04:20.434951\nE Step\nM Step Intercepts   |--\nM Step Slopes       |--\n  Deviance = 1254176.1141 | Absolute change: 3e-04 | Relative change: 0\n  Maximum item intercept parameter change: 0.00017\n  Maximum item slope parameter change: 0.000111\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 30     2024-09-12 14:04:20.553194\nE Step\nM Step Intercepts   |--\nM Step Slopes       |-\n  Deviance = 1254176.1139 | Absolute change: 2e-04 | Relative change: 0\n  Maximum item intercept parameter change: 0.000136\n  Maximum item slope parameter change: 8.9e-05\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 31     2024-09-12 14:04:20.668721\nE Step\nM Step Intercepts   |--\nM Step Slopes       |-\n  Deviance = 1254176.1138 | Absolute change: 1e-04 | Relative change: 0\n  Maximum item intercept parameter change: 0.000108\n  Maximum item slope parameter change: 7.1e-05\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nIteration 32     2024-09-12 14:04:20.788304\nE Step\nM Step Intercepts   |-\nM Step Slopes       |-\n  Deviance = 1254176.1137 | Absolute change: 1e-04 | Relative change: 0\n  Maximum item intercept parameter change: 8.6e-05\n  Maximum item slope parameter change: 5.7e-05\n  Maximum regression parameter change: 0\n  Maximum variance parameter change: 0\n....................................................\nItem Parameters\n   xsi.index xsi.label     est\n1          1         1 -1.5085\n2          2         2 -1.4816\n3          3         3 -1.3370\n4          4         4 -1.1347\n5          5         5 -0.8444\n6          6         6 -0.4600\n7          7         7 -0.0038\n8          8         8  0.5308\n9          9         9  1.1642\n10        10        10  1.8783\n11        11        11  2.6740\n12        12        12  3.4901\n13        13        13  4.4630\n...................................\nRegression Coefficients\n     [,1]\n[1,]    0\n\nVariance:\n     [,1]\n[1,]    1\n\n\nEAP Reliability:\n[1] 0.626\n\n-----------------------------\nStart:  2024-09-12 14:04:16.195906\nEnd:  2024-09-12 14:04:21.226333 \nTime difference of 5.030427 secs\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n:::\n\n3. Schau dir die Itemparameter an, die das Modell geschätzt hat. Sie finden sich unter `sim_dat_2PL$item_irt[, c(\"alpha\", \"beta\")]`. Vergleiche mit den ursprünglichen Itemparametern, die wir in `items` festgelegt haben. Was fällt dir auf?\n\n:::\n\n\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n   alpha  beta         a    b\n1   0.52 -2.92 0.5000000 -3.0\n2   0.59 -2.53 0.5833333 -2.5\n3   0.66 -2.04 0.6666667 -2.0\n4   0.75 -1.52 0.7500000 -1.5\n5   0.84 -1.01 0.8333333 -1.0\n6   0.92 -0.50 0.9166667 -0.5\n7   1.00  0.00 1.0000000  0.0\n8   1.09  0.49 1.0833333  0.5\n9   1.17  1.00 1.1666667  1.0\n10  1.24  1.52 1.2500000  1.5\n11  1.35  1.97 1.3333333  2.0\n12  1.38  2.52 1.4166667  2.5\n13  1.47  3.03 1.5000000  3.0\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Vorraussetzungen_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](Vorraussetzungen_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\nDas sieht super aus, die Werte stimmen gut überein. Dadurch, dass wir so viele Personen simuliert haben, sehen wir also, dass unsere Simulation gut funktioniert. Wir können das Gerüst dieses Simplen Modells jetzt nutzen, um uns noch spannendere Fragestellungen anzuschauen. \n\n:::\n",
    "supporting": [
      "Vorraussetzungen_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}